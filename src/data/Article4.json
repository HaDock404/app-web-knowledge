{
  "title": "psql",
  "content": [
    {
      "type": "image",
      "src": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTsHhT0lhtqSDNWxRp-jWjGiqMvYce069W8uA&s",
      "alt": ""
    },
    {
      "type": "index",
      "items": [
        { "text": "Créer une table", "anchor": "anchor14" },
        { "text": "Créer une table", "anchor": "anchor15" },
        { "text": "Activer des extensions", "anchor": "anchor16" },
        { "text": "Créer une fonction personnalisée IMMUTABLE", "anchor": "anchor17" },
        { "text": "Créer un index pour optimiser les recherches", "anchor": "anchor18" },
        { "text": "Modifier une table", "anchor": "anchor19" },
        { "text": "Triggers pour automatiser les mises à jour", "anchor": "anchor20" },
        { "text": "Vérifier la structure", "anchor": "anchor21" },
        { "text": "psql dans Docker sur GCP", "anchor": "anchor0" },
        { "text": "Création de l’image PostgreSQL avec extensions", "anchor": "anchor1" },
        { "text": "Lancer PostgreSQL en local pour tester", "anchor": "anchor2" },
        { "text": "Accéder à psql dans le conteneur", "anchor": "anchor3" },
        { "text": "Préparer l’image pour GCP", "anchor": "anchor4" },
        { "text": "Créer l'instance GCP", "anchor": "anchor5" },
        { "text": "Configurer le firewall pour l'accès distant", "anchor": "anchor6" },
        { "text": "Connexion SSH à la VM", "anchor": "anchor7" },
        { "text": "Connexion psql dans le conteneur sur la VM", "anchor": "anchor8" },
        { "text": "Vérifier les rôles et en créer", "anchor": "anchor9" },
        { "text": "Transfert de données", "anchor": "anchor12" },
        { "text": "Connexion à distance", "anchor": "anchor13" },
        { "text": "Analyser et optimiser", "anchor": "anchor22" },
        { "text": "Sauvegarde et restauration", "anchor": "anchor23" }

        

        
      ]
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Créer une table",
      "anchor": "anchor14"
    },
    {
      "type": "paragraph",
      "text": "Syntaxe générale :"
    },
    {
      "type": "code",
      "text": "CREATE TABLE companies (\n    id SERIAL PRIMARY KEY, # SERIAL : incrément automatique PRIMARY KEY : clé primaire\n    name TEXT NOT NULL,\n    values VARCHAR(14),\n    date_start DATE,\n    created_at TIMESTAMP DEFAULT NOW(), # DEFAULT : valeur par défaut\n    deleted BOOLEAN DEFAULT FALSE,\n);"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Créer une table de jointure",
      "anchor": "anchor15"
    },
    {
      "type": "paragraph",
      "text": "Permet de gérer une relation many-to-many entre deux tables (ex. services liés entre eux)."
    },
    {
      "type": "code",
      "text": "CREATE TABLE linked_services (\n    service_id INT REFERENCES services(id) ON DELETE CASCADE, # REFERENCES crée une clé étrangère ON DELETE CASCADE : supprime la ligne si la ligne référencée est supprimée\n    linked_service_id INT REFERENCES services(id) ON DELETE CASCADE,\n    PRIMARY KEY (service_id, linked_service_id) # PRIMARY KEY composé de deux colonnes → empêche doublons\n);"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Activer des extensions",
      "anchor": "anchor16"
    },
    {
      "type": "paragraph",
      "text": "Étendre PostgreSQL pour ajouter des fonctionnalités (ex. recherche floue, plein texte)."
    },
    {
      "type": "code",
      "text": "CREATE EXTENSION IF NOT EXISTS pg_trgm; # pg_trgm : recherche floue / similarité\nCREATE EXTENSION IF NOT EXISTS unaccent; # unaccent : ignorer les accents pour le texte"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Créer une fonction personnalisée IMMUTABLE",
      "anchor": "anchor17"
    },
    {
      "type": "paragraph",
      "text": "Certaines fonctions comme unaccent ne sont pas IMMUTABLE → PostgreSQL exige IMMUTABLE pour les indexes GIN ou FTS."
    },
    {
      "type": "code",
      "text": "CREATE FUNCTION immutable_unaccent(text)\nRETURNS text AS $$\n  SELECT unaccent($1)\n$$ LANGUAGE SQL IMMUTABLE;\n"
    },
    {
      "type": "paragraph",
      "text": "IMMUTABLE = résultat identique pour les mêmes entrées → OK pour index"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Créer un index pour optimiser les recherches",
      "anchor": "anchor18"
    },
    {
      "type": "paragraph",
      "text": "Index plein texte :"
    },
    {
      "type": "code",
      "text": "CREATE INDEX idx_services_fts_contextual_desc\nON services\nUSING GIN (to_tsvector('french', immutable_unaccent(contextual_description)));"
    },
    {
      "type": "paragraph",
      "text": "Index fuzzy (pg_trgm) :"
    },
    {
      "type": "code",
      "text": "CREATE INDEX idx_services_trgm_name\nON services USING GIN (name_service gin_trgm_ops);"
    },
    {
      "type": "paragraph",
      "text": "Index = boost performance pour LIKE, ILIKE, SIMILARITY, to_tsvector."
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Modifier une table :",
      "anchor": "anchor19"
    },
    {
      "type": "paragraph",
      "text": "Ajouter une colonne :"
    },
    {
      "type": "code",
      "text": "ALTER TABLE companies ADD COLUMN website TEXT;"
    },
    {
      "type": "paragraph",
      "text": "Modifier une colonne (type) :"
    },
    {
      "type": "code",
      "text": "ALTER TABLE service\nALTER COLUMN service_type TYPE VARCHAR(255)\nUSING service_type::text;"
    },
    {
      "type": "paragraph",
      "text": "Définir une valeur par défaut :"
    },
    {
      "type": "code",
      "text": "ALTER TABLE company\nALTER COLUMN created_at SET DEFAULT now(),\nALTER COLUMN updated_at SET DEFAULT now(),\nALTER COLUMN deleted SET DEFAULT false;"
    },
    {
      "type": "paragraph",
      "text": "Rendre un champ nullable :"
    },
    {
      "type": "code",
      "text": "ALTER TABLE service\nALTER COLUMN billing DROP NOT NULL;"
    },
    {
      "type": "paragraph",
      "text": "Supprimer une colonne :"
    },
    {
      "type": "code",
      "text": "ALTER TABLE it_service_company DROP COLUMN slug;"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Triggers pour automatiser les mises à jour",
      "anchor": "anchor20"
    },
    {
      "type": "paragraph",
      "text": "Créer une fonction déclenchée :"
    },
    {
      "type": "code",
      "text": "CREATE OR REPLACE FUNCTION set_updated_by()\nRETURNS TRIGGER AS $$\nBEGIN\n    NEW.updated_by = current_user;\n    NEW.updated_at = now();\n    RETURN NEW;\nEND;\n$$ LANGUAGE plpgsql;"
    },
    {
      "type": "paragraph",
      "text": "Créer un trigger associé :"
    },
    {
      "type": "code",
      "text": "CREATE TRIGGER trg_set_updated_by\nBEFORE INSERT OR UPDATE ON company\nFOR EACH ROW\nEXECUTE FUNCTION set_updated_by();"
    },
    {
      "type": "paragraph",
      "text": "Les triggers permettent de tenir à jour automatiquement des colonnes (updated_at, updated_by)."
    },
    {
      "type": "paragraph",
      "text": "Supprimer un trigger"
    },
    {
      "type": "code",
      "text": "DROP TRIGGER trg_set_created_by ON place;"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Vérifier la structure",
      "anchor": "anchor21"
    },
    {
      "type": "paragraph",
      "text": "Lister les tables :"
    },
    {
      "type": "code",
      "text": "\\dt"
    },
    {
      "type": "paragraph",
      "text": "Lister les colonnes :"
    },
    {
      "type": "code",
      "text": "\\d companies"
    },
    {
      "type": "paragraph",
      "text": "Lister les extensions installées :"
    },
    {
      "type": "code",
      "text": "\\dx"
    },
    {
      "type": "paragraph",
      "text": "Lister les index :"
    },
    {
      "type": "code",
      "text": "\\di"
    },
    {
      "type": "paragraph",
      "text": "Lister les fonctions :"
    },
    {
      "type": "code",
      "text": "\\df"
    },
    

    {
      "type": "heading",
      "level": 2,
      "text": "psql dans Docker sur GCP",
      "anchor": "anchor0"
    },
    {
      "type": "paragraph",
      "text": "Utiliser psql dans Docker sur GCP permet de limiter les coûts. Pas besoin de Cloud SQL (payant), utilisation d’une VM e2-micro ou e2-small suffisant pour dev/test. Il es possible de de stopper la VM lorsqu'elle est inutilisé. Docker simplifie la gestion des dépendances PostgreSQL et la persistance des données via le volume ou le disque attaché. La base de données est facilement réplicable sur d'autres environnements (prod, staging)."
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Création de l’image PostgreSQL avec extensions",
      "anchor": "anchor1"
    },
    {
      "type": "paragraph",
      "text": "init.sql :"
    },
    {
      "type": "code",
      "text": "-- Active les extensions\n-- Création table\n-- Création table jointure\n-- Création des index\n-- Création de fonction\n-- Index\n-- Ajouter des triggers"
    },
    {
      "type": "paragraph",
      "text": "Dockerfile :"
    },
    {
      "type": "code",
      "text": "FROM postgres:16\n\nRUN apt-get update && apt-get install -y postgresql-contrib\n\n# Copie éventuelle de scripts init SQL\nCOPY init.sql /docker-entrypoint-initdb.d/"
    },
    {
      "type": "paragraph",
      "text": "Lancer le build :"
    },
    {
      "type": "code",
      "text": "docker build -t werner-chatbot-db ."
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Lancer PostgreSQL en local pour tester",
      "anchor": "anchor2"
    },
    {
      "type": "code",
      "text": "docker run --name werner-chatbot_container \n  -e POSTGRES_PASSWORD=mypassword \n  -e POSTGRES_USER=superuser \n  -e POSTGRES_DB=werner-chatbot \n  -p 5432:5432 \n  -v $(pwd)/data:/var/lib/postgresql/data \n  -d werner-chatbot-db"
    },
    {
      "type": "paragraph",
      "text": "Le volume -v assure persistance des données même après suppression du conteneur."
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Accéder à psql dans le conteneur",
      "anchor": "anchor3"
    },
    {
      "type": "code",
      "text": "docker exec -ti werner-chatbot_container bash\npsql -U superuser -d werner-chatbot"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Préparer l’image pour GCP",
      "anchor": "anchor4"
    },
    {
      "type": "paragraph",
      "text": "Pousser sur DockerHub :"
    },
    {
      "type": "code",
      "text": "docker login\ndocker tag werner-chatbot-db hadock404/werner-chatbot:latest\ndocker push hadock404/werner-chatbot:latest"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Créer l'instance GCP",
      "anchor": "anchor5"
    },
    {
      "type": "code",
      "text": "gcloud compute instances create werner-chatbot-db \n  --machine-type=e2-small \n  --image-project=debian-cloud \n  --image-family=debian-12 \n  --boot-disk-size=20GB \n  --zone=europe-west9-b \n  --tags=postgres \n  --metadata=startup-script='#!/bin/bash \n    apt update -y\n    apt install -y docker.io\n    systemctl start docker\n    systemctl enable docker\n    mkdir -p /opt/werner-chatbot/data\n    chmod 777 /opt/werner-chatbot/data\n    docker run -d \n      --name werner-chatbot \n      --restart unless-stopped \n      -e POSTGRES_PASSWORD=mypassword \n      -e POSTGRES_USER=superuser \n      -e POSTGRES_DB=werner-chatbot \n      -p 5432:5432 \n      -v /opt/werner-chatbot/data:/var/lib/postgresql/data \n      hadock404/werner-chatbot:latest'"
    },
    {
      "type": "paragraph",
      "text": "À la fin du script, PostgreSQL sera prêt automatiquement sur la VM."
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Configurer le firewall pour l'accès distant",
      "anchor": "anchor6"
    },
    {
      "type": "code",
      "text": "gcloud compute firewall-rules create allow-postgres \n  --allow tcp:5432 \n  --target-tags=postgres \n  --description=\"Allow PostgreSQL access\" \n  --direction=INGRESS \n  --source-ranges=0.0.0.0/0"
    },
    {
      "type": "paragraph",
      "text": "Pour restreindre l'accès, il faudra ensuite modifier source-ranges avec l'IP fixe."
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Connexion SSH à la VM",
      "anchor": "anchor7"
    },
    {
      "type": "code",
      "text": "gcloud compute ssh werner-chatbot-db --zone=europe-west9-b"
    },
    {
      "type": "paragraph",
      "text": "Vérifier les logs d'installation : "
    },
    {
      "type": "code",
      "text": "cat /var/log/syslog | grep startup-script"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Connexion psql dans le conteneur sur la VM",
      "anchor": "anchor8"
    },
    {
      "type": "code",
      "text": "sudo su -\ndocker exec -ti werner-chatbot bash\npsql -U superuser -d werner-chatbot --host localhost\n\\c werner-chatbot"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Vérifier les rôles et en créer",
      "anchor": "anchor9"
    },
    {
      "type": "code",
      "text": "\\du\nCREATE ROLE data_team_00 LOGIN PASSWORD 'motdepasse';\nGRANT INSERT, UPDATE, SELECT ON ALL TABLES IN SCHEMA public TO data_team_00;\nALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT INSERT, UPDATE, SELECT ON TABLES TO data_team_00;\n"
    },
    {
      "type": "paragraph",
      "text": "Sinon nous pouvons gérer les autorisations au niveau du groupe"
    },
    {
      "type": "code",
      "text": "CREATE ROLE data_team;\n# On donne des autorisations à l'équipe\nGRANT SELECT, INSERT, UPDATE ON ALL TABLES IN SCHEMA public TO data_team;\n\nALTER DEFAULT PRIVILEGES IN SCHEMA public\nGRANT SELECT, INSERT, UPDATE ON TABLES TO data_team;\n# On ajoute les utilisateurs à la team\nGRANT data_team TO data_team_00;"
    },
    {
      "type": "paragraph",
      "text": "Supprimer un rôle :"
    },
    {
      "type": "code",
      "text": "DROP ROLE new_user;"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Transfert de données dans des tables de staging",
      "anchor": "anchor12"
    },
    {
      "type": "paragraph",
      "text": "Transfert :"
    },
    {
      "type": "code",
      "text": "gcloud compute scp data_service.csv utilisateur@werner-chatbot-db:/opt/werner-chatbot/data/"
    },
    {
      "type": "paragraph",
      "text": "Import via psql :"
    },
    {
      "type": "code",
      "text": "\\copy staging_raw_data FROM '/opt/werner-chatbot/data/data_service.csv' DELIMITER ',' CSV HEADER;"
    },
    {
      "type": "paragraph",
      "text": "Insertion des données :"
    },
    {
      "type": "code",
      "text": "INSERT INTO table_name (column_name)\nSELECT DISTINCT column_name\nFROM staging_raw_data\nWHERE column_name IS NOT NULL\nON CONFLICT (table_name) DO NOTHING;"
    },
    {
      "type": "paragraph",
      "text": "Exporter des données :"
    },
    {
      "type": "code",
      "text": "\\copy (SELECT * FROM companies) TO '/chemin/export.csv' DELIMITER ',' CSV HEADER;"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Connexion à distance",
      "anchor": "anchor13"
    },
    {
      "type": "paragraph",
      "text": "Récupérer l'IP publique :"
    },
    {
      "type": "code",
      "text": "gcloud compute instances describe werner-chatbot-db \\\n  --zone=europe-west9-b \\\n  --format='get(networkInterfaces[0].accessConfigs[0].natIP)'"
    },
    {
      "type": "paragraph",
      "text": "Puis :"
    },
    {
      "type": "code",
      "text": "psql -h <IP_VM> -U superuser -d werner-chatbot"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Analyser et optimiser",
      "anchor": "anchor22"
    },
    {
      "type": "paragraph",
      "text": "Voir la taille de la base :"
    },
    {
      "type": "code",
      "text": "SELECT pg_size_pretty(pg_database_size('dbname'));"
    },
    {
      "type": "paragraph",
      "text": "Voir la taille d'une table :"
    },
    {
      "type": "code",
      "text": "SELECT pg_size_pretty(pg_total_relation_size('table'));"
    },
    {
      "type": "paragraph",
      "text": "Analyser un plan d’exécution :"
    },
    {
      "type": "code",
      "text": "EXPLAIN ANALYZE SELECT * FROM table WHERE ...;"
    },
    {
      "type": "paragraph",
      "text": "Vacuum pour nettoyer :"
    },
    {
      "type": "code",
      "text": "VACUUM;\nVACUUM FULL;  -- plus agressif, verrouille\nANALYZE;      -- actualise stats pour optimiser planificateur"
    },


    {
      "type": "heading",
      "level": 2,
      "text": "Sauvegarde et restauration",
      "anchor": "anchor23"
    },
    {
      "type": "paragraph",
      "text": "Sauvegarder :"
    },
    {
      "type": "code",
      "text": "pg_dump -U user dbname > backup.sql"
    },
    {
      "type": "paragraph",
      "text": "Restaurer :"
    },
    {
      "type": "code",
      "text": "psql -U user -d dbname -f backup.sql"
    },
    {
      "type": "paragraph",
      "text": "Sauvegarde compressée :"
    },
    {
      "type": "code",
      "text": "pg_dump -U user dbname | gzip > backup.sql.gz"
    },
    {
      "type": "paragraph",
      "text": "Restaurer compressée :"
    },
    {
      "type": "code",
      "text": "gunzip -c backup.sql.gz | psql -U user -d dbname"
    }
  ]
}
